---

k8s_local_workdir: "~/kubernetes"

k8s_wait_timeout: 600

k8s_epel_enable: "{{ ansible_distribution_major_version == '7' | bool }}"

k8s_container_runtime: "{{ 'docker-ce' if ansible_distribution_major_version == '7' else 'containerd.io' }}"

k8s_packages:
  - kubeadm
  - kubectl
  - "{{ k8s_container_runtime }}"

k8s_container_service: "{{ 'docker' if ansible_distribution_major_version == '7' else 'containerd' }}"

k8s_cluster_name: "kubernetes"

k8s_services:
  - kubelet
  - "{{ k8s_container_service }}"

# The main master node from which all will be driven
k8s_master_node: kubernetes-1

# The master port on which Kubernetes will serve
k8s_master_port: 6443

# Define the certificate key for k8s encryption
# If you need to generate random key for k8s certificate encryption use:
# openssl rand -hex 32
k8s_master_cert_key: "91bded725a628a081d74888df8745172ed842fe30c7a3898b3c63ca98c7226fd"

# Multi master
# Set to true if you want a multi master setup:
k8s_multi_master: false

# Multi master - Define balancer VIP:
# k8s_balancer_VIP: 192.168.122.199
#
# Multi master - Define balancer port
# k8s_balancer_port: 8443
# 
# Multi master - Define balancer password
# If you need to generate password just use:
# openssl rand -hex 7
# k8s_balancer_password: "d6e284576158b1"

k8s_master_ports:
  - 6443/tcp
  - 2379-2380/tcp
  - 10250/tcp
  - 10251/tcp
  - 10252/tcp
  # Multi master - Remember to enable the load balancer port
  #- 8443/tcp

k8s_worker_ports:
  - 10250/tcp

k8s_nodeport_ports:
  - 30000-32767/tcp

k8s_firewalld_enable: true

k8s_network_cidr: 172.16.0.0/16

# Calico addon
k8s_network_addon: calico
k8s_network_calico_ip_autodetection_method: 'interface=eth*'
k8s_network_addon_ports:
  - 179/tcp
  - 4789/udp
  - 5473/tcp

# Enable if you need to change Docker native cgroup, that in CentOS 7 is cgroupfs
#k8s_docker_native_cgroupdriver: 'systemd'
#k8s_docker_daemon_options:
#  exec-opts:
#    - native.cgroupdriver={{ k8s_docker_native_cgroupdriver }}

k8s_dashboard_enable: false
k8s_dashboard_namespace: kubernetes-dashboard
k8s_dashboard_user: dashboard-user

k8s_ceph_csi_enable: false
k8s_ceph_csi_namespace: ceph-csi
k8s_ceph_csi_vol_expansion: false

k8s_metallb_enable: false
k8s_metallb_namespace: metallb-system
k8s_metallb_ports:
  - 7946/tcp
k8s_metallb_pools: {}

k8s_ingress_nginx_enable: false
k8s_ingress_nginx_namespace: ingress-nginx
k8s_ingress_nginx_services: {}

k8s_cert_manager_enable: false
k8s_cert_manager_namespace: cert-manager
k8s_cert_manager_issuers: {}

# Set this to true to force k8s cluster reset
k8s_reset: false
