---

- name: "Create {{ k8s_user.namespace }} namespace for user {{ k8s_user.name }}"
  local_action:
    module: kubernetes.core.k8s
    kubeconfig: "{{ k8s_kubeconfig }}"
    kind: Namespace
    name: "{{ k8s_user.namespace }}"
    state: present

- name: "Check if certificates path for {{ k8s_user.name }} already exists"
  local_action:
    module: stat
    path: "{{ k8s_local_workdir }}/users/{{ k8s_user.name }}.crt"
  register: k8s_user_cert

- block:
    - name: "Generate key for user {{ k8s_user.name }}"
      local_action:
        module: command openssl genrsa -out {{ k8s_local_workdir }}/users/{{ k8s_user.name }}.key 2048

    - name: "Generater csr for user {{ k8s_user.name }}"
      local_action:
        module: command openssl req -new -key {{ k8s_local_workdir }}/users/{{ k8s_user.name }}.key -out {{ k8s_local_workdir }}/users/{{ k8s_user.name }}.csr -subj "/CN={{ k8s_user.name }}/O={{ k8s_user.namespace }}"

    - name: "Generater key for user {{ k8s_user.name }}"
      local_action:
        module: command openssl x509 -req -in {{ k8s_local_workdir }}/users/{{ k8s_user.name }}.csr -CA {{ k8s_local_workdir }}/pki/ca.crt -CAkey {{ k8s_local_workdir }}/pki/ca.key -CAcreateserial -out {{ k8s_local_workdir }}/users/{{ k8s_user.name }}.crt -days {{ k8s_user.cert_expire_days }}

    - name: "Force update context in the kube config (since there's a new certificate)"
      set_fact:
        k8s_user_force_context_update: true
  when:
    - not k8s_user_cert.stat.exists|bool

- block:
    - name: "Add credentials for use {{ k8s_user.name }} to {{ k8s_kubeconfig }}"
      local_action:
        module: command kubectl --kubeconfig {{ k8s_kubeconfig }} config set-credentials {{ k8s_user.name }} --client-certificate={{ k8s_local_workdir }}/users/{{ k8s_user.name }}.crt --client-key={{ k8s_local_workdir }}/users/{{ k8s_user.name }}.key

    - name: "Create context for user {{ k8s_user.name }} in namespace {{ k8s_user.namespace }}"
      local_action:
        module: command kubectl --kubeconfig {{ k8s_kubeconfig }} config set-context {{ k8s_user.name }}-context --cluster=kubernetes --namespace={{ k8s_user.namespace }} --user={{ k8s_user.name }}
      when:
       - k8s_user_force_context_update is defined
       - k8s_user_force_context_update|bool
  when:
    - k8s_user.update_kube_config|bool
